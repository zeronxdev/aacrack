System.register(["./vue-legacy.js?v=1720690738171","./index-legacy.js?v=1720690738171"],(function(e,o){"use strict";var n,r,a,l,c,i,d,t,s,b,u,h,k,v,f,x,p,g,m,C,y,z,w,S,R,D,T,$,F,M;return{setters:[e=>{n=e.p,r=e.l,a=e.r,l=e.k,c=e.A,i=e.d,d=e.a},e=>{t=e.aD,s=e.bd,b=e.aF,u=e.bk,h=e.aQ,k=e.aR,v=e.aS,f=e.av,x=e.ax,p=e.az,g=e.aA,m=e.bj,C=e.bT,y=e.bU,z=e.aV,w=e.aG,S=e.aH,R=e.aI,D=e.aU,T=e.be,$=e.bl,F=e.bM,M=e.aM}],execute:function(){const o={sizeSmall:"14px",sizeMedium:"16px",sizeLarge:"18px",labelPadding:"0 8px",labelFontWeight:"400"},A=e("c",{name:"Checkbox",common:t,self:e=>{const{baseColor:n,inputColorDisabled:r,cardColor:a,modalColor:l,popoverColor:c,textColorDisabled:i,borderColor:d,primaryColor:t,textColor2:b,fontSizeSmall:u,fontSizeMedium:h,fontSizeLarge:k,borderRadiusSmall:v,lineHeight:f}=e;return Object.assign(Object.assign({},o),{labelLineHeight:f,fontSizeSmall:u,fontSizeMedium:h,fontSizeLarge:k,borderRadius:v,color:n,colorChecked:t,colorDisabled:r,colorDisabledChecked:r,colorTableHeader:a,colorTableHeaderModal:l,colorTableHeaderPopover:c,checkMarkColor:n,checkMarkColorDisabled:i,checkMarkColorDisabledChecked:i,border:`1px solid ${d}`,borderDisabled:`1px solid ${d}`,borderDisabledChecked:`1px solid ${d}`,borderChecked:`1px solid ${t}`,borderFocus:`1px solid ${t}`,boxShadowFocus:`0 0 0 2px ${s(t,{alpha:.3})}`,textColor:b,textColorDisabled:i})}}),B=n("svg",{viewBox:"0 0 64 64",class:"check-icon"},n("path",{d:"M50.42,16.76L22.34,39.45l-8.1-11.46c-1.12-1.58-3.3-1.96-4.88-0.84c-1.58,1.12-1.95,3.3-0.84,4.88l10.26,14.51  c0.56,0.79,1.42,1.31,2.38,1.45c0.16,0.02,0.32,0.03,0.48,0.03c0.8,0,1.57-0.27,2.2-0.78l30.99-25.03c1.5-1.21,1.74-3.42,0.52-4.92  C54.13,15.78,51.93,15.55,50.42,16.76z"})),U=n("svg",{viewBox:"0 0 100 100",class:"line-icon"},n("path",{d:"M80.2,55.5H21.4c-2.8,0-5.1-2.5-5.1-5.5l0,0c0-3,2.3-5.5,5.1-5.5h58.7c2.8,0,5.1,2.5,5.1,5.5l0,0C85.2,53.1,82.9,55.5,80.2,55.5z"})),V=k("n-checkbox-group"),H={min:Number,max:Number,size:String,value:Array,defaultValue:{type:Array,default:null},disabled:{type:Boolean,default:void 0},"onUpdate:value":[Function,Array],onUpdateValue:[Function,Array],onChange:[Function,Array]},P=(e("a",r({name:"CheckboxGroup",props:H,setup(e){const{mergedClsPrefixRef:o}=b(e),n=u(e),{mergedSizeRef:r,mergedDisabledRef:d}=n,t=a(e.defaultValue),s=l((()=>e.value)),k=h(s,t),f=l((()=>{var e;return(null===(e=k.value)||void 0===e?void 0:e.length)||0})),x=l((()=>Array.isArray(k.value)?new Set(k.value):new Set));return c(V,{checkedCountRef:f,maxRef:i(e,"max"),minRef:i(e,"min"),valueSetRef:x,disabledRef:d,mergedSizeRef:r,toggleCheckbox:function(o,r){const{nTriggerFormInput:a,nTriggerFormChange:l}=n,{onChange:c,"onUpdate:value":i,onUpdateValue:d}=e;if(Array.isArray(k.value)){const e=Array.from(k.value),n=e.findIndex((e=>e===r));o?~n||(e.push(r),d&&v(d,e,{actionType:"check",value:r}),i&&v(i,e,{actionType:"check",value:r}),a(),l(),t.value=e,c&&v(c,e)):~n&&(e.splice(n,1),d&&v(d,e,{actionType:"uncheck",value:r}),i&&v(i,e,{actionType:"uncheck",value:r}),c&&v(c,e),t.value=e,a(),l())}else o?(d&&v(d,[r],{actionType:"check",value:r}),i&&v(i,[r],{actionType:"check",value:r}),c&&v(c,[r]),t.value=[r],a(),l()):(d&&v(d,[],{actionType:"uncheck",value:r}),i&&v(i,[],{actionType:"uncheck",value:r}),c&&v(c,[]),t.value=[],a(),l())}}),{mergedClsPrefix:o}},render(){return n("div",{class:`${this.mergedClsPrefix}-checkbox-group`,role:"group"},this.$slots)}})),f([x("checkbox","\n font-size: var(--n-font-size);\n outline: none;\n cursor: pointer;\n display: inline-flex;\n flex-wrap: nowrap;\n align-items: flex-start;\n word-break: break-word;\n line-height: var(--n-size);\n --n-merged-color-table: var(--n-color-table);\n ",[p("show-label","line-height: var(--n-label-line-height);"),f("&:hover",[x("checkbox-box",[g("border","border: var(--n-border-checked);")])]),f("&:focus:not(:active)",[x("checkbox-box",[g("border","\n border: var(--n-border-focus);\n box-shadow: var(--n-box-shadow-focus);\n ")])]),p("inside-table",[x("checkbox-box","\n background-color: var(--n-merged-color-table);\n ")]),p("checked",[x("checkbox-box","\n background-color: var(--n-color-checked);\n ",[x("checkbox-icon",[f(".check-icon","\n opacity: 1;\n transform: scale(1);\n ")])])]),p("indeterminate",[x("checkbox-box",[x("checkbox-icon",[f(".check-icon","\n opacity: 0;\n transform: scale(.5);\n "),f(".line-icon","\n opacity: 1;\n transform: scale(1);\n ")])])]),p("checked, indeterminate",[f("&:focus:not(:active)",[x("checkbox-box",[g("border","\n border: var(--n-border-checked);\n box-shadow: var(--n-box-shadow-focus);\n ")])]),x("checkbox-box","\n background-color: var(--n-color-checked);\n border-left: 0;\n border-top: 0;\n ",[g("border",{border:"var(--n-border-checked)"})])]),p("disabled",{cursor:"not-allowed"},[p("checked",[x("checkbox-box","\n background-color: var(--n-color-disabled-checked);\n ",[g("border",{border:"var(--n-border-disabled-checked)"}),x("checkbox-icon",[f(".check-icon, .line-icon",{fill:"var(--n-check-mark-color-disabled-checked)"})])])]),x("checkbox-box","\n background-color: var(--n-color-disabled);\n ",[g("border","\n border: var(--n-border-disabled);\n "),x("checkbox-icon",[f(".check-icon, .line-icon","\n fill: var(--n-check-mark-color-disabled);\n ")])]),g("label","\n color: var(--n-text-color-disabled);\n ")]),x("checkbox-box-wrapper","\n position: relative;\n width: var(--n-size);\n flex-shrink: 0;\n flex-grow: 0;\n user-select: none;\n -webkit-user-select: none;\n "),x("checkbox-box","\n position: absolute;\n left: 0;\n top: 50%;\n transform: translateY(-50%);\n height: var(--n-size);\n width: var(--n-size);\n display: inline-block;\n box-sizing: border-box;\n border-radius: var(--n-border-radius);\n background-color: var(--n-color);\n transition: background-color 0.3s var(--n-bezier);\n ",[g("border","\n transition:\n border-color .3s var(--n-bezier),\n box-shadow .3s var(--n-bezier);\n border-radius: inherit;\n position: absolute;\n left: 0;\n right: 0;\n top: 0;\n bottom: 0;\n border: var(--n-border);\n "),x("checkbox-icon","\n display: flex;\n align-items: center;\n justify-content: center;\n position: absolute;\n left: 1px;\n right: 1px;\n top: 1px;\n bottom: 1px;\n ",[f(".check-icon, .line-icon","\n width: 100%;\n fill: var(--n-check-mark-color);\n opacity: 0;\n transform: scale(0.5);\n transform-origin: center;\n transition:\n fill 0.3s var(--n-bezier),\n transform 0.3s var(--n-bezier),\n opacity 0.3s var(--n-bezier),\n border-color 0.3s var(--n-bezier);\n "),m({left:"1px",top:"1px"})])]),g("label","\n color: var(--n-text-color);\n transition: color .3s var(--n-bezier);\n user-select: none;\n -webkit-user-select: none;\n padding: var(--n-label-padding);\n font-weight: var(--n-label-font-weight);\n ",[f("&:empty",{display:"none"})])]),C(x("checkbox","\n --n-merged-color-table: var(--n-color-table-modal);\n ")),y(x("checkbox","\n --n-merged-color-table: var(--n-color-table-popover);\n "))])),j=Object.assign(Object.assign({},w.props),{size:String,checked:{type:[Boolean,String,Number],default:void 0},defaultChecked:{type:[Boolean,String,Number],default:!1},value:[String,Number],disabled:{type:Boolean,default:void 0},indeterminate:Boolean,label:String,focusable:{type:Boolean,default:!0},checkedValue:{type:[Boolean,String,Number],default:!0},uncheckedValue:{type:[Boolean,String,Number],default:!1},"onUpdate:checked":[Function,Array],onUpdateChecked:[Function,Array],privateInsideTable:Boolean,onChange:[Function,Array]});e("_",r({name:"Checkbox",props:j,setup(e){const o=a(null),{mergedClsPrefixRef:n,inlineThemeDisabled:r,mergedRtlRef:c}=b(e),t=u(e,{mergedSize(o){const{size:n}=e;if(void 0!==n)return n;if(f){const{value:e}=f.mergedSizeRef;if(void 0!==e)return e}if(o){const{mergedSize:e}=o;if(void 0!==e)return e.value}return"medium"},mergedDisabled(o){const{disabled:n}=e;if(void 0!==n)return n;if(f){if(f.disabledRef.value)return!0;const{maxRef:{value:e},checkedCountRef:o}=f;if(void 0!==e&&o.value>=e&&!m.value)return!0;const{minRef:{value:n}}=f;if(void 0!==n&&o.value<=n&&m.value)return!0}return!!o&&o.disabled.value}}),{mergedDisabledRef:s,mergedSizeRef:k}=t,f=d(V,null),x=a(e.defaultChecked),p=i(e,"checked"),g=h(p,x),m=z((()=>{if(f){const o=f.valueSetRef.value;return!(!o||void 0===e.value)&&o.has(e.value)}return g.value===e.checkedValue})),C=w("Checkbox","-checkbox",P,A,e,n);function y(o){if(f&&void 0!==e.value)f.toggleCheckbox(!m.value,e.value);else{const{onChange:n,"onUpdate:checked":r,onUpdateChecked:a}=e,{nTriggerFormInput:l,nTriggerFormChange:c}=t,i=m.value?e.uncheckedValue:e.checkedValue;r&&v(r,i,o),a&&v(a,i,o),n&&v(n,i,o),l(),c(),x.value=i}}const T={focus:()=>{var e;null===(e=o.value)||void 0===e||e.focus()},blur:()=>{var e;null===(e=o.value)||void 0===e||e.blur()}},$=S("Checkbox",c,n),F=l((()=>{const{value:e}=k,{common:{cubicBezierEaseInOut:o},self:{borderRadius:n,color:r,colorChecked:a,colorDisabled:l,colorTableHeader:c,colorTableHeaderModal:i,colorTableHeaderPopover:d,checkMarkColor:t,checkMarkColorDisabled:s,border:b,borderFocus:u,borderDisabled:h,borderChecked:v,boxShadowFocus:f,textColor:x,textColorDisabled:p,checkMarkColorDisabledChecked:g,colorDisabledChecked:m,borderDisabledChecked:y,labelPadding:z,labelLineHeight:w,labelFontWeight:S,[M("fontSize",e)]:R,[M("size",e)]:D}}=C.value;return{"--n-label-line-height":w,"--n-label-font-weight":S,"--n-size":D,"--n-bezier":o,"--n-border-radius":n,"--n-border":b,"--n-border-checked":v,"--n-border-focus":u,"--n-border-disabled":h,"--n-border-disabled-checked":y,"--n-box-shadow-focus":f,"--n-color":r,"--n-color-checked":a,"--n-color-table":c,"--n-color-table-modal":i,"--n-color-table-popover":d,"--n-color-disabled":l,"--n-color-disabled-checked":m,"--n-text-color":x,"--n-text-color-disabled":p,"--n-check-mark-color":t,"--n-check-mark-color-disabled":s,"--n-check-mark-color-disabled-checked":g,"--n-font-size":R,"--n-label-padding":z}})),B=r?R("checkbox",l((()=>k.value[0])),F,e):void 0;return Object.assign(t,T,{rtlEnabled:$,selfRef:o,mergedClsPrefix:n,mergedDisabled:s,renderedChecked:m,mergedTheme:C,labelId:D(),handleClick:function(e){s.value||y(e)},handleKeyUp:function(e){if(!s.value)switch(e.key){case" ":case"Enter":y(e)}},handleKeyDown:function(e){" "===e.key&&e.preventDefault()},cssVars:r?void 0:F,themeClass:null==B?void 0:B.themeClass,onRender:null==B?void 0:B.onRender})},render(){var e;const{$slots:o,renderedChecked:r,mergedDisabled:a,indeterminate:l,privateInsideTable:c,cssVars:i,labelId:d,label:t,mergedClsPrefix:s,focusable:b,handleKeyUp:u,handleKeyDown:h,handleClick:k}=this;null===(e=this.onRender)||void 0===e||e.call(this);const v=T(o.default,(e=>t||e?n("span",{class:`${s}-checkbox__label`,id:d},t||e):null));return n("div",{ref:"selfRef",class:[`${s}-checkbox`,this.themeClass,this.rtlEnabled&&`${s}-checkbox--rtl`,r&&`${s}-checkbox--checked`,a&&`${s}-checkbox--disabled`,l&&`${s}-checkbox--indeterminate`,c&&`${s}-checkbox--inside-table`,v&&`${s}-checkbox--show-label`],tabindex:a||!b?void 0:0,role:"checkbox","aria-checked":l?"mixed":r,"aria-labelledby":d,style:i,onKeyup:u,onKeydown:h,onClick:k,onMousedown:()=>{F("selectstart",window,(e=>{e.preventDefault()}),{once:!0})}},n("div",{class:`${s}-checkbox-box-wrapper`}," ",n("div",{class:`${s}-checkbox-box`},n($,null,{default:()=>this.indeterminate?n("div",{key:"indeterminate",class:`${s}-checkbox-icon`},U):n("div",{key:"check",class:`${s}-checkbox-icon`},B)}),n("div",{class:`${s}-checkbox-box__border`}))),v)}}))}}}));
